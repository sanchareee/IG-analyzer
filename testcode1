<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Instagram Analytics Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <style>
        .gradient-bg {
            background: linear-gradient(135deg, #833ab4 0%, #fd1d1d 50%, #fcb045 100%);
        }
        .shadow-inset {
            box-shadow: inset 0 0 10px rgba(0,0,0,0.1);
        }
        .scrollbar-hide::-webkit-scrollbar {
            display: none;
        }
        .animate-pulse-slow {
            animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.8; }
        }
    </style>
</head>
<body class="bg-gray-100 font-sans">
    <div class="min-h-screen">
        <!-- Header -->
        <header class="gradient-bg text-white shadow-lg">
            <div class="container mx-auto px-4 py-6">
                <div class="flex justify-between items-center">
                    <div class="flex items-center space-x-4">
                        <img src="https://placehold.co/50x50" alt="Instagram logo icon with gradient purple to orange colors" class="w-10 h-10 rounded-full border-2 border-white">
                        <h1 class="text-2xl font-bold">Instagram Analytics Dashboard</h1>
                    </div>
                    <div class="flex items-center space-x-4">
                        <div class="bg-white bg-opacity-20 rounded-full px-4 py-2 flex items-center">
                            <img src="https://placehold.co/30x30" alt="User profile thumbnail image" class="w-6 h-6 rounded-full mr-2">
                            <span class="font-medium">Demo Account</span>
                        </div>
                        <button class="bg-white text-pink-600 px-4 py-2 rounded-full font-semibold hover:bg-gray-100 transition">
                            Refresh Data
                        </button>
                    </div>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <main class="container mx-auto px-4 py-8">
            <!-- Summary Cards -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow p-6 flex items-center">
                    <div class="bg-blue-100 p-3 rounded-full mr-4">
                        <img src="https://placehold.co/30x30" alt="Film reel icon representing Instagram reels" class="w-8 h-8 text-blue-600">
                    </div>
                    <div>
                        <p class="text-gray-500 text-sm">Total Reels</p>
                        <h3 class="text-2xl font-bold">217</h3>
                    </div>
                </div>
                
                <div class="bg-white rounded-lg shadow p-6 flex items-center">
                    <div class="bg-purple-100 p-3 rounded-full mr-4">
                        <img src="https://placehold.co/30x30" alt="Square image icon representing Instagram posts" class="w-8 h-8 text-purple-600">
                    </div>
                    <div>
                        <p class="text-gray-500 text-sm">Total Posts</p>
                        <h3 class="text-2xl font-bold">548</h3>
                    </div>
                </div>
                
                <div class="bg-white rounded-lg shadow p-6 flex items-center">
                    <div class="bg-green-100 p-3 rounded-full mr-4">
                        <img src="https://placehold.co/30x30" alt="Multiple rectangle icon representing Instagram carousels" class="w-8 h-8 text-green-600">
                    </div>
                    <div>
                        <p class="text-gray-500 text-sm">Total Carousels</p>
                        <h3 class="text-2xl font-bold">128</h3>
                    </div>
                </div>
                
                <div class="bg-white rounded-lg shadow p-6 flex items-center">
                    <div class="bg-yellow-100 p-3 rounded-full mr-4">
                        <img src="https://placehold.co/30x30" alt="Clock icon representing stories" class="w-8 h-8 text-yellow-600">
                    </div>
                    <div>
                        <p class="text-gray-500 text-sm">Total Stories</p>
                        <h3 class="text-2xl font-bold">842</h3>
                    </div>
                </div>
            </div>

            <!-- Monthly Growth Charts -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
                <!-- Followers Growth -->
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-xl font-semibold flex items-center">
                            <img src="https://placehold.co/20x20" alt="Rising chart icon representing followers growth" class="w-5 h-5 mr-2">
                            Followers Growth (Monthly)
                        </h2>
                        <div class="text-sm">
                            <span class="inline-block w-3 h-3 bg-blue-500 rounded-full mr-1"></span>
                            <span class="text-gray-500">Followers</span>
                            <span class="inline-block w-3 h-3 bg-green-500 rounded-full ml-2 mr-1"></span>
                            <span class="text-gray-500">New Followers</span>
                        </div>
                    </div>
                    <div class="h-80">
                        <canvas id="followersChart"></canvas>
                    </div>
                </div>
                
                <!-- Engagement Metrics -->
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-xl font-semibold flex items-center">
                            <img src="https://placehold.co/20x20" alt="Handshake icon representing engagement metrics" class="w-5 h-5 mr-2">
                            Engagement Metrics (Monthly)
                        </h2>
                        <div class="flex space-x-2">
                            <select class="text-sm border rounded px-2 py-1">
                                <option>Last 6 Months</option>
                                <option>Last 12 Months</option>
                                <option>All Time</option>
                            </select>
                        </div>
                    </div>
                    <div class="h-80">
                        <canvas id="engagementChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Post Activity Section -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
                <!-- Post Type Breakdown -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h2 class="text-xl font-semibold mb-4 flex items-center">
                        <img src="https://placehold.co/20x20" alt="Pie chart icon representing breakdown of post types" class="w-5 h-5 mr-2">
                        Post Type Breakdown (Monthly)
                    </h2>
                    <div class="grid grid-cols-3 gap-4 mb-4">
                        <div class="text-center">
                            <div class="mx-auto mb-2">
                                <div class="radial-progress" style="--value:70; --size:5rem; --thickness: 6px;" role="progressbar">70%</div>
                            </div>
                            <p class="text-sm text-gray-600">Reels</p>
                        </div>
                        <div class="text-center">
                            <div class="mx-auto mb-2">
                                <div class="radial-progress" style="--value:45; --size:5rem; --thickness: 6px;" role="progressbar">45%</div>
                            </div>
                            <p class="text-sm text-gray-600">Static</p>
                        </div>
                        <div class="text-center">
                            <div class="mx-auto mb-2">
                                <div class="radial-progress" style="--value:30; --size:5rem; --thickness: 6px;" role="progressbar">30%</div>
                            </div>
                            <p class="text-sm text-gray-600">Carousels</p>
                        </div>
                    </div>
                    <div class="h-64">
                        <canvas id="postTypeChart"></canvas>
                    </div>
                </div>
                
                <!-- Weekly Post Frequency -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h2 class="text-xl font-semibold mb-4 flex items-center">
                        <img src="https://placehold.co/20x20" alt="Calendar icon representing weekly posting frequency" class="w-5 h-5 mr-2">
                        Weekly Post Frequency
                    </h2>
                    <div class="flex items-center justify-center h-64">
                        <div class="w-full">
                            <canvas id="weeklyPostChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Timing Metrics Section -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
                <!-- Most Active Posting Times -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h2 class="text-xl font-semibold mb-4 flex items-center">
                        <img src="https://placehold.co/20x20" alt="Clock icon representing optimal posting times" class="w-5 h-5 mr-2">
                        Most Active Posting Times
                    </h2>
                    <div class="h-72">
                        <div id="postingTimesChart"></div>
                    </div>
                </div>
                
                <!-- Frequency of Comment Replies -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h2 class="text-xl font-semibold mb-4 flex items-center">
                        <img src="https://placehold.co/20x20" alt="Speech bubble icon representing comment reply frequency" class="w-5 h-5 mr-2">
                        Frequency of Comment Replies
                    </h2>
                    <div class="h-72">
                        <canvas id="commentReplyChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Daily Breakdown Section -->
            <div class="bg-white rounded-lg shadow p-6 mb-8">
                <h2 class="text-xl font-semibold mb-4 flex items-center">
                    <img src="https://placehold.co/20x20" alt="Bar chart icon representing daily posting frequency" class="w-5 h-5 mr-2">
                    Daily Posting Frequency
                </h2>
                <div style="height: 400px;">
                    <canvas id="dailyPostChart"></canvas>
                </div>
            </div>
        </main>
    </div>

    <script>
        // Followers Growth Chart
        const followersCtx = document.getElementById('followersChart').getContext('2d');
        const followersChart = new Chart(followersCtx, {
            type: 'line',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [
                    {
                        label: 'Total Followers',
                        data: [1200, 1350, 1500, 1650, 1825, 2010, 2150, 2300, 2400, 2500, 2600, 2700],
                        borderColor: '#3b82f6',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        tension: 0.3,
                        fill: true
                    },
                    {
                        label: 'New Followers',
                        data: [0, 150, 150, 150, 175, 185, 140, 150, 100, 100, 100, 100],
                        borderColor: '#10b981',
                        backgroundColor: 'rgba(16, 185, 129, 0.1)',
                        tension: 0.3,
                        fill: true
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    tooltip: {
                        callbacks: {
                            afterLabel: function(context) {
                                if (context.datasetIndex === 1 && context.dataIndex > 0) {
                                    const prevValue = context.dataset.data[context.dataIndex - 1];
                                    const diff = context.parsed.y - prevValue;
                                    return `Change from previous: ${diff > 0 ? '+' : ''}${diff}`;
                                }
                            }
                        }
                    },
                    legend: {
                        position: 'bottom',
                    }
                },
                scales: {
                    y: {
                        beginAtZero: false,
                        grid: {
                            drawBorder: false
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });

        // Engagement Metrics Chart
        const engagementCtx = document.getElementById('engagementChart').getContext('2d');
        const engagementChart = new Chart(engagementCtx, {
            type: 'bar',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [
                    {
                        label: 'Interactions',
                        data: [320, 340, 360, 380, 400, 420, 440, 460, 480, 500, 520, 540],
                        backgroundColor: 'rgba(234, 88, 12, 0.7)',
                        borderRadius: 4
                    },
                    {
                        label: 'Profile Visits',
                        data: [150, 170, 190, 210, 230, 250, 270, 290, 310, 330, 350, 370],
                        backgroundColor: 'rgba(217, 70, 239, 0.7)',
                        borderRadius: 4
                    },
                    {
                        label: 'External Link Taps',
                        data: [50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105],
                        backgroundColor: 'rgba(6, 182, 212, 0.7)',
                        borderRadius: 4
                    },
                    {
                        label: 'Views',
                        data: [1200, 1250, 1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650, 1700, 1750],
                        backgroundColor: 'rgba(16, 185, 129, 0.7)',
                        borderRadius: 4
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    tooltip: {
                        mode: 'index',
                        intersect: false,
                        callbacks: {
                            afterLabel: function(context) {
                                const month = context.label;
                                const datasets = context.chart.data.datasets;
                                const engagementRate = ((datasets[0].data[context.dataIndex] / datasets[3].data[context.dataIndex]) * 100).toFixed(2);
                                return `Engagement Rate: ${engagementRate}%`;
                            }
                        }
                    }
                },
                scales: {
                    x: {
                        stacked: true,
                        grid: {
                            display: false
                        }
                    },
                    y: {
                        stacked: false,
                        beginAtZero: true,
                        grid: {
                            drawBorder: false
                        }
                    }
                }
            }
        });

        // Post Type Breakdown Chart
        const postTypeCtx = document.getElementById('postTypeChart').getContext('2d');
        const postTypeChart = new Chart(postTypeCtx, {
            type: 'bar',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [
                    {
                        label: 'Reels',
                        data: [8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30],
                        backgroundColor: 'rgba(139, 92, 246, 0.7)',
                        borderRadius: 4
                    },
                    {
                        label: 'Static Posts',
                        data: [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
                        backgroundColor: 'rgba(59, 130, 246, 0.7)',
                        borderRadius: 4
                    },
                    {
                        label: 'Carousels',
                        data: [3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9],
                        backgroundColor: 'rgba(236, 72, 153, 0.7)',
                        borderRadius: 4
                    },
                    {
                        label: 'Stories',
                        data: [20, 22, 24, 24, 26, 28, 30, 30, 32, 34, 34, 36],
                        backgroundColor: 'rgba(245, 158, 11, 0.7)',
                        borderRadius: 4
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                },
                scales: {
                    x: {
                        stacked: false,
                        grid: {
                            display: false
                        }
                    },
                    y: {
                        stacked: false,
                        beginAtZero: true,
                        grid: {
                            drawBorder: false
                        }
                    }
                }
            }
        });

        // Weekly Post Frequency Chart
        const weeklyPostCtx = document.getElementById('weeklyPostChart').getContext('2d');
        const weeklyPostChart = new Chart(weeklyPostCtx, {
            type: 'radar',
            data: {
                labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
                datasets: [
                    {
                        label: 'Posts per Weekday',
                        data: [12, 18, 22, 20, 24, 16, 10],
                        backgroundColor: 'rgba(99, 102, 241, 0.2)',
                        borderColor: 'rgba(99, 102, 241, 1)',
                        pointBackgroundColor: 'rgba(99, 102, 241, 1)',
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgba(99, 102, 241, 1)'
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    r: {
                        angleLines: {
                            display: true
                        },
                        suggestedMin: 0,
                        suggestedMax: 30
                    }
                }
            }
        });

        // Most Active Posting Times Heatmap
        const postingTimesOptions = {
            series: [{
                name: 'Posts',
                data: generatePostingTimesData()
            }],
            chart: {
                height: 350,
                type: 'heatmap',
                toolbar: {
                    show: false
                }
            },
            dataLabels: {
                enabled: false
            },
            colors: ["#008FFB"],
            title: {
                show: false
            },
            xaxis: {
                type: 'category',
                categories: ['12 AM', '3 AM', '6 AM', '9 AM', '12 PM', '3 PM', '6 PM', '9 PM']
            },
            yaxis: {
                type: 'category',
                categories: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
                reversed: true
            },
            plotOptions: {
                heatmap: {
                    shadeIntensity: 0.5,
                    radius: 0,
                    useFillColorAsStroke: false,
                    colorScale: {
                        ranges: [{
                                from: 0,
                                to: 2,
                                name: 'Low Activity',
                                color: '#E4F1FF'
                            },
                            {
                                from: 3,
                                to: 5,
                                name: 'Medium Activity',
                                color: '#72BBFF'
                            },
                            {
                                from: 6,
                                to: 10,
                                name: 'High Activity',
                                color: '#0072E5'
                            },
                            {
                                from: 11,
                                to: 20,
                                name: 'Very High Activity',
                                color: '#004999'
                            }
                        ]
                    }
                }
            }
        };

        const postingTimesChart = new ApexCharts(document.querySelector("#postingTimesChart"), postingTimesOptions);
        postingTimesChart.render();

        function generatePostingTimesData() {
            const heatmapSeries = [];
            const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];
            const times = ['12 AM', '3 AM', '6 AM', '9 AM', '12 PM', '3 PM', '6 PM', '9 PM'];

            days.forEach(day => {
                times.forEach(time => {
                    heatmapSeries.push({
                        x: time,
                        y: day,
                        value: getRandomActivity(day, time)
                    });
                });
            });

            return heatmapSeries;
        }

        function getRandomActivity(day, time) {
            // Higher activity during business hours on weekdays
            if (time === '3 PM' && day !== 'Sat' && day !== 'Sun') return Math.floor(Math.random() * 15) + 6;
            if (time === '12 PM' && day !== 'Sat' && day !== 'Sun') return Math.floor(Math.random() * 10) + 5;
            if (time === '9 AM' && day !== 'Sat' && day !== 'Sun') return Math.floor(Math.random() * 8) + 3;
            if (time === '6 PM' && day !== 'Sat' && day !== 'Sun') return Math.floor(Math.random() * 7) + 2;
            
            // Lower activity on weekends and nights
            if (day === 'Sat' || day === 'Sun') return Math.floor(Math.random() * 4);
            if (time === '12 AM' || time === '3 AM' || time === '6 AM') return Math.floor(Math.random() * 2);
            
            return Math.floor(Math.random() * 5) + 1;
        }

        // Comment Reply Frequency Chart
        const commentReplyCtx = document.getElementById('commentReplyChart').getContext('2d');
        const commentReplyChart = new Chart(commentReplyCtx, {
            type: 'doughnut',
            data: {
                labels: ['Within 1 hour', '1-6 hours', '6-12 hours', '12-24 hours', '1-3 days', '>3 days', 'No reply'],
                datasets: [{
                    data: [35, 25, 15, 10, 8, 5, 2],
                    backgroundColor: [
                        'rgba(16, 185, 129, 0.7)',
                        'rgba(101, 163, 13, 0.7)',
                        'rgba(234, 179, 8, 0.7)',
                        'rgba(249, 115, 22, 0.7)',
                        'rgba(239, 68, 68, 0.7)',
                        'rgba(220, 38, 38, 0.7)',
                        'rgba(156, 163, 175, 0.7)'
                    ],
                    borderWidth: 0,
                    cutout: '70%'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'right'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                let label = context.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                label += context.formattedValue + '%';
                                return label;
                            }
                        }
                    }
                }
            }
        });

        // Daily Posting Frequency Chart
        const dailyPostCtx = document.getElementById('dailyPostChart').getContext('2d');
        const dailyPostChart = new Chart(dailyPostCtx, {
            type: 'line',
            data: {
                labels: Array.from({length: 30}, (_, i) => `Day ${i+1}`),
                datasets: [
                    {
                        label: 'Posts per Day',
                        data: Array.from({length: 30}, () => Math.floor(Math.random() * 5) + 1),
                        borderColor: 'rgba(99, 102, 241, 1)',
                        backgroundColor: 'rgba(99, 102, 241, 0.1)',
                        tension: 0.3,
                        fill: true,
                        pointRadius: 4,
                        pointHoverRadius: 6
                    },
                    {
                        label: '7-Day Average',
                        data: calculateMovingAverage(Array.from({length: 30}, () => Math.floor(Math.random() * 5) + 1), 7),
                        borderColor: 'rgba(239, 68, 68, 1)',
                        backgroundColor: 'transparent',
                        borderDash: [5, 5],
                        tension: 0.1,
                        pointRadius: 0
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top'
                    },
                    tooltip: {
                        intersect: false,
                        mode: 'index'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            drawBorder: false
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });

        function calculateMovingAverage(data, windowSize) {
            return data.map((_, index) => {
                const start = Math.max(0, index - windowSize + 1);
                const end = index + 1;
                const subset = data.slice(start, end);
                const sum = subset.reduce((a, b) => a + b, 0);
                return sum / subset.length;
            });
        }

        // Responsive adjustments
        window.addEventListener('resize', function() {
            followersChart.resize();
            engagementChart.resize();
            postTypeChart.resize();
            weeklyPostChart.resize();
            dailyPostChart.resize();
            commentReplyChart.resize();
        });
    </script>
</body>
</html>
